<?php


namespace Tests\commands;


use EMedia\Oxygen\OxygenServiceProvider;
use Illuminate\Console\OutputStyle;
use Illuminate\Container\Container;
use Illuminate\Support\Facades\Artisan;
use Mockery as m;

class OxygenSetupCommandTest extends \Orchestra\Testbench\TestCase
{
    protected $laravelPath;

    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub

        $this->laravelPath = dirname(__DIR__) . '/../vendor/orchestra/testbench-core/laravel';

        $this->createRouteFiles();
        $this->backupFiles();
    }

    protected function tearDown(): void
    {
        $this->restoreFiles();
        parent::tearDown(); // TODO: Change the autogenerated stub
    }

    protected function createRouteFiles()
    {
        mkdir($this->laravelPath . '/routes');
        file_put_contents($this->laravelPath . '/routes/web.php' , '');
        file_put_contents($this->laravelPath . '/routes/api.php' , '');
    }

    protected function backupFiles()
    {
        `cp -r $this->laravelPath _laravel-backup`;
    }

    protected function restoreFiles()
    {
        `rm -rf $this->laravelPath`;
        `cp -r _laravel-backup $this->laravelPath`;
        `rm -rf ./_laravel-backup`;
    }

    protected function getPackageProviders($app)
    {
        return [
            OxygenServiceProvider::class
        ];
    }

    /**
     * @test
     */
    public function test_OxygenSetupCommand_handle_sets_up_project()
    {
        $moved = false;
        Artisan::command('setup:move-public {--y}', function () use ($moved) {
            $moved = true;
        });

        $this->artisan('setup:oxygen-project')
             ->expectsQuestion('What is the project name?', 'Test')
            ->expectsQuestion('What is the `from` email address for system emails? (Press ENTER key for default)', 'test@example.com')
            ->expectsQuestion('What is your email to seed the database? (Press ENTER key for default)', 'test@example.com')
            ->expectsQuestion('What is the local development URL? (Press ENTER key for default)', 'foo')
            ->expectsQuestion('create_role_permission_tables.php file already exists. Create another?', 'No')
             ->assertExitCode(0);

        $this->assertTrue($moved);

    }


}