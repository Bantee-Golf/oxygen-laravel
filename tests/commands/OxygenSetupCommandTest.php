<?php


namespace Tests\commands;


use EMedia\AppSettings\AppSettingsServiceProvider;
use EMedia\Devices\DeviceAuthServiceProvider;
use EMedia\Generators\GeneratorServiceProvider;
use EMedia\Oxygen\OxygenServiceProvider;
use Illuminate\Console\OutputStyle;
use Illuminate\Container\Container;
use Illuminate\Support\Facades\Artisan;
use Mockery as m;
use Setup\Copy\Base;
use Setup\Copy\RepoCopy;
use Silber\Bouncer\Bouncer;
use Silber\Bouncer\BouncerFacade;
use Silber\Bouncer\BouncerServiceProvider;

class OxygenSetupCommandTest extends \Orchestra\Testbench\TestCase

{
    protected $backupName = '_testbench_laravel_backup';
    protected $laravelPath;

    /**
     * @throws \Exception
     */
    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub

        $this->laravelPath = dirname(__FILE__) . '/../../vendor/orchestra/testbench-core/laravel/';
        $this->guardOrchestraInstalled();

        $this->backupFiles();
        $this->copyLaravelRepoFiles();
    }

    protected function tearDown(): void
    {
        $this->restoreFiles();
        parent::tearDown(); // TODO: Change the autogenerated stub
    }

    protected function copyLaravelRepoFiles()
    {
        $base = new Base([
            "routes/web.php",
            "routes/api.php",
            'app/Http/Kernel.php'
        ]);

        $cloner = new RepoCopy($this->laravelPath);
        $cloner->copy($base);
    }

    protected function backupFiles()
    {
        `cp -r $this->laravelPath $this->backupName`;
    }

    protected function restoreFiles()
    {
        `rm -rf $this->laravelPath`;
        `cp -r $this->backupName $this->laravelPath`;
        `rm -rf ./$this->backupName`;
    }

    protected function getPackageProviders($app)
    {
        return [
            OxygenServiceProvider::class,
            BouncerServiceProvider::class,
            GeneratorServiceProvider::class,
            AppSettingsServiceProvider::class,
            DeviceAuthServiceProvider::class,

        ];
    }

    protected function getEnvironmentSetUp($app)
    {
        $app['config']->set('oxygen.abilityModel', '');
        $app['config']->set('oxygen.roleModel', '');
    }


    protected function getPackageAliases($app)
    {
        return [
            BouncerFacade::class,
        ];
    }

    /**
     * @test
     * @throws \Exception
     */
    public function test_OxygenSetupCommand_handle_sets_up_project()
    {
        $this->artisan('setup:oxygen-project')
             ->expectsQuestion('What is the project name?', 'Test')
             ->expectsQuestion('What is the `from` email address for system emails? (Press ENTER key for default)', 'test@example.com')
             ->expectsQuestion('What is your email to seed the database? (Press ENTER key for default)', 'test@example.com')
             ->expectsQuestion('What is the local development URL? (Press ENTER key for default)', 'foo')
             ->assertExitCode(0);
    }

    /**
     * @throws \Exception
     */
    protected function guardOrchestraInstalled()
    {
        $missing = !file_exists($this->laravelPath);
        if ($missing) {
            throw new \Exception("Missing directory {$this->laravelPath}, is orchestra/testbench installed?");
        }
    }


}